---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: controlplanes.kapy.sh
spec:
  group: kapy.sh
  names:
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    singular: controlplane
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ControlPlane is the Schema for the controlplanes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec defines the desired state of ControlPlane
            properties:
              server:
                properties:
                  image:
                    type: string
                  persistence:
                    type: string
                required:
                - image
                - persistence
                type: object
            required:
            - server
            type: object
          status:
            description: ControlPlaneStatus defines the observed state of ControlPlane
            properties:
              ready:
                description: Ready is set when the ControlPlane is ready to serve
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
